{"version":3,"sources":["AddTodoForm.tsx","TodoListItem.tsx","TodoList.tsx","App.tsx","index.tsx"],"names":["AddTodoForm","addTodo","useState","newTodo","setNewTodo","className","type","value","placeholder","onChange","e","target","onClick","preventDefault","TodoListItem","todo","toggleTodo","complete","undefined","checked","text","TodoList","todos","map","key","initialTodos","App","setTodos","Fragment","addToDo","length","selectedTodo","newTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAMaA,EAA0C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACtCC,mBAAS,IAD6B,mBAC7DC,EAD6D,KACpDC,EADoD,KAYpE,OACI,8BACI,2BAAOC,UAAU,WAAWC,KAAK,OAAOC,MAAOJ,EAASK,YAAY,aAAaC,SAXpE,SAACC,GAClBN,EAAWM,EAAEC,OAAOJ,UAWhB,4BAAQF,UAAU,SAASC,KAAK,SAASM,QAR5B,SAACF,GAClBA,EAAEG,iBACFZ,EAAQE,GACRC,EAAW,MAKP,SCbCU,G,MAA4C,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAE9D,OACI,wBAAIX,UAAU,YACV,2BAAOA,UAAWU,EAAKE,SAAW,iBAAcC,GAC5C,2BACIb,UAAU,YACVC,KAAK,WACLa,QAASJ,EAAKE,SACdL,QAAS,kBAAMI,EAAWD,MAE7BA,EAAKK,SCXTC,EAAoC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAON,EAAiB,EAAjBA,WACvD,OACI,wBAAIX,UAAU,QACTiB,EAAMC,KAAI,SAAAR,GACP,OAAO,kBAAC,EAAD,CAAcS,IAAKT,EAAKK,KAAML,KAAMA,EAAMC,WAAYA,SCRvES,EAA4B,GAwCnBC,EAlCO,WAAO,IAAD,EACAxB,mBAASuB,GADT,mBACnBH,EADmB,KACZK,EADY,KAsB1B,OACE,kBAAC,IAAMC,SAAP,KACE,6BACE,6BACE,kBAAC,EAAD,CAAa3B,QAVI,SAAC4B,GACxB,GAAuB,IAAnBA,EAAQC,OACV,OAAO,KAETH,EAAS,GAAD,mBAAKL,GAAL,CAAY,CAAEF,KAAMS,EAASZ,UAAU,UAQ3C,kBAAC,EAAD,CAAUK,MAAOA,EAAON,WAzBC,SAAAe,GAC7B,IAAMC,EAAWV,EAAMC,KAAI,SAAAR,GACzB,OAAIA,IAASgB,EACJ,2BACFhB,GADL,IAEEE,UAAWF,EAAKE,WAGbF,KAETY,EAASK,SCnBbC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,e","file":"static/js/main.fa39c599.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, FormEvent } from \"react\";\n\ninterface AddTodoFormProps {\n    addTodo: AddToDo;\n}\n\nexport const AddTodoForm: React.FC<AddTodoFormProps> = ({ addTodo }) => {\n    const [newTodo, setNewTodo] = useState(\"\");\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewTodo(e.target.value);\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        addTodo(newTodo);\n        setNewTodo(\"\");\n    }\n    return (\n        <form>\n            <input className=\"inputBox\" type=\"text\" value={newTodo} placeholder=\"enter task\" onChange={handleChange} />\n            <button className=\"button\" type=\"submit\" onClick={handleSubmit}>add</button>\n        </form>\n    );\n};","import React from \"react\";\nimport \"./index.css\";\n\ninterface TodoListItemProps {\n    todo: Todo;\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoListItem: React.FC<TodoListItemProps> = ({ todo, toggleTodo }) => {\n\n    return (\n        <li className=\"listItem\">\n            <label className={todo.complete ? \"listLabel\" : undefined}>\n                <input\n                    className=\"checkmark\"\n                    type=\"checkbox\"\n                    checked={todo.complete}\n                    onClick={() => toggleTodo(todo)}\n                />\n                {todo.text}\n            </label>\n        </li>\n    );\n}","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ninterface TodoListProps {\n    todos: Array<Todo>;\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, toggleTodo }) => {\n    return (\n        <ul className=\"list\">\n            {todos.map(todo => {\n                return <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />;\n            })}\n        </ul>\n    );\n};","import React, { useState } from 'react';\nimport { AddTodoForm } from './AddTodoForm';\nimport { TodoList } from \"./TodoList\";\n\nconst initialTodos: Array<Todo> = [\n  // { text: \"Walk the dog\", complete: true },\n  // { text: \"Docker tutorial\", complete: true },\n  // { text: \"Workout\", complete: false }\n];\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo: ToggleTodo = selectedTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  const addTodo: AddToDo = (addToDo: string) => {\n    if (addToDo.length === 0) {\n      return null;\n    }\n    setTodos([...todos, { text: addToDo, complete: false }]);\n  }\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <AddTodoForm addTodo={addTodo} />\n        </div>\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('container')\n);\n\n"],"sourceRoot":""}